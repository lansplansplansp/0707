#树莓派基本命令
1. sudo ifdown eth0:	断掉有线网卡，记住wifi的ip，树莓派灯重新连接后用wifi的ip登陆
2. route：				显示板子路由表
3. sudo route del default gw 192.168.1.1:			删掉路由表两个其中一个有线网卡，不用断掉网线也可以wifi连接
4. menu->preferences->Raspberry Pi Configuration:	改系统名
5. ls		显示当前目录文件
	1. ls test.c	有就显示test.c
6. ls -a	显示包含.开头的目录
7. ls -l	显示详细信息（没有.开头的）
8. clear	清除窗口信息
9. pwd		显示当前目录位置
10. cd		进入目录
11. mkdir	创建目录
12. cd ..	返回上一级目录
13. /		整个系统顶端
14. ~		主目录（打开黑窗口时、cd回车、cd /home/pi显示的目录）
15. 绝对路径						/home/pi、~、在哪里都可以进去
16. mkdir -p test1/test2/test3	连续创建父子目录
17. rm -r	删除目录
18. rm -r ../(当前目录）			删除自己（删了还能看到，退出再进去就没有了）
19. mv		改变名字
20. cp 		拷贝文件
21. cp -r	拷贝目录
22. tree	显示当前目录里目录的树形结构
23. tree -L 1					显示一级树形目录
24. tree -L 2					显示二级树形目录
25. history	显示以前敲过的命令
26. history | grep tree
#Linux的权限
1. 用户只有创建了才有，现在只有一个pi用户
2. d						目录
	1. -					可执行、普通文件
3. rwx（读、写、执行）		拥有者、拥有组、其他权限
4. 
5.  pi pi					拥有者名 拥有组名
6.  数字						文件、目录大小
7.  创建时间
8.  id						显示用户id(用户、组的pi的id都=10000),1000以后为普通用户，可改
9.  root					管理员用户，id = 0
10.  su root				进入管路员用户
11.  sudo passwd root		改管理员密码
12.  exit					退出管路员用户
13.  chmod	-w x			去掉某人写权限
14.  -w						不可以在x目录创建东西，但进入root后可以创建	
15.  sudo mkdir y			没有w权限也可以创建
16.  sudo chown	pi y		将某人root拥有者改成pi
17.  sudo chgrp pi y		将某人root拥有组改成pi
18.  chmod +w text			加某人写权限（只能操作拥有者）
	1.  chmod g+w text		加组
	2.  chmod o+w text		加其他人
19.  chmod +r text			加某人读权限（三种人一起加）
20.  chmod +x text			加某人执行权限（三种人一起加）
	1.  chmod u-x text		单-用户执行权限
21.  rwx三人有				绿底黑字：表示谁都可以访问
	1.  = chmod 777 text
22.  umask  				显示掩码(初始：0022）
23.  umask 0002				chmod +w text之后，主、组的w可以改
24.  umask 0000				chmod +w text之后，主、组、其他的w可以改
25.  sudo useradd sirlan	创建用户（没有主目录）
	1.  sudo userdel sirlan	删除用户
26.  sudo passwd sirlan		设置密码
27.  sudo addusser sirlan1	正宗的创建用户(一套：设置密码、是否创建）
	1.  我创建了一个用户：lansir1,passwd:1234
	2.  sudo userdel sirlan1	
		1.  显示一个进程，要重启，把该进程杀死（可以用ps -e看进程）
		2.  sudo userdel sirlan1
		3.  还有目录没删：sudo rm -r /home/lansir1
28.  users					显示所有用户
	1.  /home				
29.  sudo reboot			重启
29.  ping （ip）				看是否有连上，如果连上，最后数据会改变
30.  cat与tac				正显示和显示后面、反显示
31.  more a.c				显示一屏
32.  less a.c				显示文本，需要退出
33.  head a.c				显示前10行
34.  tail a.c				显示后10行
35.  head -n 5 a.c			显示前5行
34.  tail -n 5 a.c		    显示后5行
35.  nl	a.c					显示文本行号
36.  cd /etc cat passwd		显示所有用户信息（以前Linux用来放密码的）
	1.   用户名：密码（用x代替，因为不安全，在其他地方保存）：用户id:组id:...:路径
	2.  cat group			看组名：密码：组id
	3.  ls shadow			密码位置
		 1.  sudo cat shadow 	显示密码（经过加密的）
	4.  ls passwd group shadow	这三个文件不能删，删了需要刷机
37.  which ls				显示ls位置（绝对路径显示）
38.  /bin/ls				裸执行ls
39.  which mv
40.  which cp
41.  echo $PATH				显示which命令能执行的路径（显示环境变量）
42.  PATH=/home/pi:$PATH	添加which命令可执行的路径（：$PATH原来的路径）；重启就没了
#fine
1. find . -name a= fine ./ name a	找当前文件名为a
2. find . -iname a					找当前文件名为a(不区分大小写）	
3. find . -iname “a*"				找所有含a通配
4. find . -iname “a？"				找所有含a后一个字母
5. find . -iname “？a？"
6. find . -iname “test[abc]"		正则表达式,有a,b,c一个就显示
7. find . -user root				文件拥有者为root
8. find . -gid 0 = find . -gid root	拥有者为root
9. find . -user root -a -name test  
10. find . atime -1					一天之内处理过的文件
11. find . amin -1
12. find . type d					找目录
13. find . -type f					找文件
14. find . -size 0					找文件大小为0
15. find . -perm 755				找权限为755
16. find . -perm +755				找>755
#vi/vim
1. /printf回车			找printf,/是按n往下找
2. ？printf回车			找printf,？是按n往上找
3. ：1,10s/nihao/hello/g	将1到10行的nihao替换成hello
4. v					块操作，选中操作
5. vim test.c +6		打开就到第6行
#环境变量（重启后，改的都会消失）  
1. echo $HOME
2. echo $PWD
3. HELLO = "hello"		设为环境变量
4. export HELLO			设为系统新环境变量（别人可看）
#gcc
1. gcc -o test test.c = gcc  test.c -o test
	1. gcc -O1 test test.c	编译优化（缩减内存）级别1（有1-3级别）编译程序，3最高，时间可能最长
2. gcc -E test.c -o test.i  生成预处理文件test.i
3. gcc -S test.i		    生成汇编文件test.s
4. gcc -c test.s		    生成机器文件test.o（多个.o可生成一个可执行文件）
	1. gcc test.c test1.c -o test	
	2. gcc -c test.c + gcc -c test1.c 生成test.o test1.o
		1. gcc test.o test1.o -o test 生成 test
	以上两种是多文件编译2法
5. gcc test.o -o test       生成可执行（目标）文件test
5. hexdump test.c		    输出在磁盘上的二进制码以十六进制显示
6. gcc test1.c test2.c 	    只有一个mian函数也可以
#板子联网
1. ping -c 5 www.badu.c	ping5次检查网络
2. ifconfig				显示自己的ip
#gdb调试命令
1. gcc -g test.c
2. break main
3. run
4. next/step
5. bt					显示当前运行全部函数
6. fream 1				跳转到第1帧函数
7. info threads			查看当前有几个线程
#进程命令
1.  ps -e				查看进程号
2.  kill pid			杀死指定进程
3.  top					查看CUP进程运行情况
4.  q					退出top
#其他命令
1. ：set nu				在编辑区显示行号
2. kill -l				显示64个信号
3. kill -9 bush			杀死当前终端
4. gcc -v				查看gcc版本
			
		
	